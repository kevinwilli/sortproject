How many cars do you want to generate? 10
Unsorted Cars:

Selection Sort Time: 9700 nanoseconds
Sorted Cars:

Merge Sort Time: 963300 nanoseconds
Sorted Cars:

Counting Sort Time: 724700 nanoseconds
Sorted Cars:

Insertion Sort Time: 4000 nanoseconds
Sorted Cars:



-------------------------Table----------------------------------
----------------------------------------------------------------
number of cars  |   Sort Time |    | Categories
----------------------------------------------------------------
    10          |   9700        |  | (O(^n2))
    10          |   963300      |  | (O(nlogn))
----------------------------------------------------------------
    2500        |   898089800   |  | (O(^n2))
    2500        |   4451200     |  | (O(nlogn))
----------------------------------------------------------------
    250000      |  150141175400 |  | (O(^n2))
    250000      |    8961600    |  | (O(nlogn))
----------------------------------------------------------------
    550000      | 1412487150000 |  | (O(^n2))
    550000      |   12403200    |  | (O(nlogn))
---------------------------------------------------------------

Discussion:

Based on the table above, the merge sort time is less than the
the selection sort time when the amount of cars to be sorted is large.
In other hand, when the amount of cars to be sorted is significantly low,
the selection sort method is more efficient.
